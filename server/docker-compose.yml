version: '3.8'

services:
  # CICI 应用服务器
  app:
    build: .
    container_name: cici-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://admin:admin123@mongo:27017/cici_database?authSource=admin
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis123
      - JWT_SECRET=cici-super-secret-jwt-key-2025
    volumes:
      - ./logs:/app/logs
      - ./temp:/app/temp  
      - ./uploads:/app/uploads
      - .:/app
      - /app/node_modules
    depends_on:
      - mongo
      - redis
    networks:
      - cici-network
    restart: unless-stopped

  # MongoDB 数据库
  mongo:
    image: mongo:7.0
    container_name: cici-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin123
      - MONGO_INITDB_DATABASE=cici_database
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - cici-network
    restart: unless-stopped

  # Redis 缓存
  redis:
    image: redis:7.2-alpine
    container_name: cici-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - cici-network
    restart: unless-stopped

  # Elasticsearch (搜索引擎)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.15
    container_name: cici-search
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - cici-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Nginx (文件服务和反向代理)
  nginx:
    image: nginx:alpine
    container_name: cici-nginx
    ports:
      - "8080:80"
    volumes:
      - ./uploads:/var/www/uploads:ro
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - cici-network
    restart: unless-stopped

# 数据卷
volumes:
  mongo_data:
  mongo_config:
  redis_data:
  elasticsearch_data:

# 网络
networks:
  cici-network:
    driver: bridge